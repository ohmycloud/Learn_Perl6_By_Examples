.say for (-270, -255 ... 0, 2 , 4 ... 10).rotor( 2 => -1);

#`(
(-270 -255)
(-255 -240)
(-240 -225)
(-225 -210)
(-210 -195)
(-195 -180)
(-180 -165)
(-165 -150)
(-150 -135)
(-135 -120)
(-120 -105)
(-105 -90)
(-90 -75)
(-75 -60)
(-60 -45)
(-45 -30)
(-30 -15)
(-15 0)
(0 2)
(2 4)
(4 6)
(6 8)
(8 10)
)

# when trans function work with regex such as just a single `^` or `$`, it sucks and can't return any more!

for (-9, -6 ... 0, 2 , 4 ... 10).rotor( 2 => -1) {
    .join(',').trans(/^/ => '[', /$/ => ')' ).say;
}

#`{
[-9,-6)
[-6,-3)
[-3,0)
[0,2)
[2,4)
[4,6)
[6,8)
[8,10)
}

